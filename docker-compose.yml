# CastleDigital's Docker Configuration for Magento
# (https://github.com/viniciusnw/magento-docker-digitalOcean)
#
# Version 1.0.2

version: "3"

services:
  app:
    build:
      context: ./docker/nginx
      dockerfile: "Dockerfile"
    user: app
    ports:
      - "80:8000"
      - "443:8443"
    links:
      - db
      - phpfpm
    volumes: &appvolumes
      - ./docker/certbot/conf/:/etc/nginx/ssl/
      - ./docker/magento/pub/:/var/www/html/pub/
      - ~/.composer:/var/www/.composer:cached
      - appdata:/var/www/html
      - sockdata:/sock

  phpfpm:
    build:
      context: ./docker/php
      dockerfile: "Dockerfile"
    links:
      - db
    volumes: *appvolumes

  db:
    image: mariadb:10.4
    command: --max_allowed_packet=64M
    ports:
      - "3306:3306"
    env_file: env/db.env
    volumes:
      - ./docker/mysql:/var/lib/mysql

  # redis:
  #   image: redis:5.0-alpine

  # elasticsearch:
  #   build:
  #     context: ./docker/elasticsearch
  #     dockerfile: "Dockerfile"
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     - "discovery.type=single-node"
  #     # Set custom heap size to avoid memory errors
  #     - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
  #     # Avoid test failures due to small disks
  #     # More info at https://github.com/markshust/docker-magento/issues/488
  #     - "cluster.routing.allocation.disk.threshold_enabled=false"
  #     - "index.blocks.read_only_allow_delete"

  # rabbitmq:
  #   image: rabbitmq:3.8.22-management-alpine
  #   ports:
  #     - "15672:15672"
  #     - "5672:5672"
  #   volumes:
  #     - rabbitmqdata:/var/lib/rabbitmq

  # phpmyadmin:
  #   image: phpmyadmin
  #   restart: always
  #   ports:
  #     - 8080:80
  #   links:
  #     - db
  #   environment:
  #     - PMA_ARBITRARY=1

  # cron:
  #   build:
  #     context: ./docker/php
  #     dockerfile: "Dockerfile"
  #   user: root
  #   command: /usr/local/bin/cronstart
  #   tty: true
  #   links:
  #     - db
  #   volumes: *appvolumes
    
volumes:
  appdata:
  rabbitmqdata:
  sockdata: